class Solution(object):
    def numberOfWays(self, n, x):
        MOD = 10**9 + 7
        
        lis = []
        i = 1
        while i**x <= n:
            lis.append(i)
            i += 1

        mem = {}
        def backtrack(val, idx):
            if (val, idx) in mem:
                return mem[(val, idx)]
            if val == n:
                return 1
            if val > n or idx >= len(lis):
                return 0
            a = backtrack(val + (lis[idx] ** x), idx + 1)
            b = backtrack(val, idx + 1)
            mem[(val, idx)] = (a + b) % MOD
            return mem[(val, idx)]
        
        return backtrack(0, 0)
